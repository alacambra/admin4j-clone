
<project name="Build" default="zip" basedir=".">
    <description>
        This build is specific to local tasks
    </description>
  <!-- set global properties for this build -->
	<property file="build.properties"/>
	
	<path id="compile.classpath.ref">

		<fileset dir="${dev.lib.dir}">
			<include name="*.jar"/>
		</fileset>

		<fileset dir="${runtime.lib.dir}">
			<include name="**/*.jar"/>
		</fileset>

	</path>
	
	<path id="pmd.classpath.ref">

		<fileset dir="${build.lib.dir}/pmd">
			<include name="*.jar"/>
		</fileset>

	</path>
	
	<path id="checkstyle.classpath.ref">

		<fileset dir="${build.lib.dir}/checkstyle">
			<include name="*.jar"/>
		</fileset>

	</path>
				
	<taskdef classpathref="compile.classpath.ref" resource="tasks.properties"/>
	<taskdef classpathref="pmd.classpath.ref" name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
	<taskdef classpathref="checkstyle.classpath.ref" resource="checkstyletask.properties" />
	<property name="compile.classpath" refid="compile.classpath.ref" />
		
	<property environment="env"/>
	<property name="tomcat.dir" value="${env.CATALINA_HOME}"/>
	<property name="site.dir" value="${env.WEBSITE_HOME}"/>
	
	<target name="validateEnvironment" description="validate environment variable settings" >
		<echo message="CATALINA_HOME=${env.CATALINA_HOME}" />
		<echo message="WEBSITE_HOME=${env.WEBSITE_HOME}" />
		<echo message="JDK5_HOME=${env.JDK5_HOME}" />
		<echo message="JDK6_HOME=${env.JDK6_HOME}" />
		<echo message="JDK7_HOME=${env.JDK7_HOME}" />
		<echo message="JDK8_HOME=${env.JDK8_HOME}" />
		
		<!-- Note: This is counter-intuitive.  I would have expected to use the 'unless' attribute instead of 'if'. -->
		<fail if="${env.CATALINA_HOME}" message="CATALINA_HOME environment variable not defined."/>
		<fail if="${env.WEBSITE_HOME}" message="WEBSITE_HOME environment variable not defined."/>
		<fail if="${env.JDK5_HOME}" message="JDK5_HOME environment variable not defined."/>
		<fail if="${env.JDK6_HOME}" message="JDK6_HOME environment variable not defined."/>
		<fail if="${env.JDK7_HOME}" message="JDK7_HOME environment variable not defined."/>
		<fail if="${env.JDK8_HOME}" message="JDK8_HOME environment variable not defined."/>
	</target>
	
	<target name="clean" depends="validateEnvironment" description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${dist.dir}"/>
		<delete dir="${build.dir}"/>
		<delete dir="${test-build.dir}"/>
		<delete dir="${instrument-build.dir}"/>
		<delete dir="${javadoc.dir}"/>
	</target>
	
	<target name="init" depends="clean">
    	<!-- Create the time stamp -->
		<echo>Building: ${project.name}${version}</echo>
	    <tstamp/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${build.dir}"/>	
		<mkdir dir="${javadoc.dir}"/>
	</target>
	
	<target name="build-admin4j-commons" depends="init" description="Rafactors commons to net.admin4j.deps.commons">
		<delete dir="${temp.src.dir}"/>
		<mkdir dir="${temp.src.dir}"/>
		
		<unjar src="${lib.src.dir}/commons-lang3-3.0.1-source.jar" dest="${temp.src.dir}" />
		<delete>
			 <fileset dir="${temp.src.dir}/org/apache/commons/lang3" includes="**/*.class"/>
		</delete>
		<unjar src="${lib.src.dir}/commons-dbutils-1.3-sources.jar" dest="${temp.src.dir}" />
		<unjar src="${lib.src.dir}/commons-io-1.4-sources.jar" dest="${temp.src.dir}" />
		
		<unjar src="${lib.src.dir}/commons-fileupload-1.2.1-sources.jar" dest="${temp.src.dir}" />
		<delete dir="${temp.src.dir}/org/apache/commons/fileupload/portlet"/>
		
		<unjar src="${lib.src.dir}/commons-email-1.2-sources.jar" dest="${temp.src.dir}" />		
		<unjar src="${lib.src.dir}/commons-collections-3.2-sources.jar" dest="${temp.src.dir}" />
		
		<unjar src="${lib.src.dir}/commons-beanutils-1.7.0-sources.jar" dest="${temp.src.dir}" />
		<unjar src="${lib.src.dir}/commons-bean-collections-1.7.0-sources.jar" dest="${temp.src.dir}" />
		
		<unjar src="${lib.src.dir}/commons-logging-1.1.1-sources.jar" dest="${temp.src.dir}" />
		<delete file="${temp.src.dir}/org/apache/commons/logging/impl/AvalonLogger.java"/>
		<delete file="${temp.src.dir}/org/apache/commons/logging/impl/LogKitLogger.java"/>
		
		<mkdir dir="${temp.src.dir}/net/admin4j/deps/commons"/>
		<move todir="${temp.src.dir}/net/admin4j/deps/commons">
		    <fileset dir="${temp.src.dir}/org/apache/commons"/>
		</move>
		
		<!-- Perform package refactoring -->
		<replace dir="${temp.src.dir}/net/admin4j/deps/commons" >
		    <replacefilter token="org.apache.commons.lang3"
		        value="net.admin4j.deps.commons.lang3" />
			<replacefilter token="org.apache.commons.mail"
				value="net.admin4j.deps.commons.mail" />
			<replacefilter token="org.apache.commons.fileupload"
				value="net.admin4j.deps.commons.fileupload" />
			<replacefilter token="org.apache.commons.io"
				value="net.admin4j.deps.commons.io" />
			<replacefilter token="org.apache.commons.dbutils"
				value="net.admin4j.deps.commons.dbutils" />
			<replacefilter token="org.apache.commons.beanutils"
				value="net.admin4j.deps.commons.beanutils" />
			<replacefilter token="org.apache.commons.collections"
				value="net.admin4j.deps.commons.collections" />
			<replacefilter token="org.apache.commons.logging"
				value="net.admin4j.deps.commons.logging" />
		</replace>
		
		<javac destdir="${build.dir}" 
				srcdir="${temp.src.dir}" 
			    target="1.5"
			    source="1.5"
				fork="yes"  
				executable="${env.JDK5_HOME}/bin/javac"
				memoryMaximumSize="512m" 
				includeAntRuntime="no" 
				debug="on" 
				classpath="${compile.classpath}" >
			<include name="**/*.java" />
			<exclude name="**/*30.java" />
		</javac>
		
		<jar destfile="${dev.lib.dir}/${project.name}-commons.jar" basedir="${build.dir}" >
			<fileset dir="${build.dir}" />
			<fileset dir="${temp.src.dir}" />
		</jar>

	</target>
	
	<target name="compile-jdk5" depends="init" description="Compiles Admin4J under jdk 1.5">
		<javac destdir="${build.dir}" 
				srcdir="${src.dir}" 
			    target="1.5"
			    source="1.5"
				fork="yes"  
				executable="${env.JDK5_HOME}/bin/javac"
				memoryMaximumSize="512m" 
				includeAntRuntime="no" 
				debug="on" 
				classpath="${compile.classpath}" >
			<include name="**/*.java" />
			<exclude name="**/*41.java" />
			<exclude name="**/*41Base.java" />
			<exclude name="**/*40.java" />
			<exclude name="**/*40Base.java" />
			<exclude name="**/*V1_6.java" />
			<exclude name="**/*Jdk7.java" />
		</javac>
	</target>
	
	<target name="instrument-code" depends="build-admin4j-commons,compile-jdk5,compile-jdk5-jdbc,compile-jdk6-jdbc,compile-jdk6,compile-jdk7" description="Instruments code with code coverage tool">
		<delete file="cobertura.ser"/>
		
		<cobertura-instrument todir="${instrument-build.dir}">
			<!--
				The following line causes instrument to ignore any
				source line containing a reference to 3rd party products, for the
				purposes of coverage reporting.
			-->
			<ignore regex="net.admin4j.deps.*" />

			<fileset dir="${build.dir}">
				<!--
					Instrument all the application classes, but
					don't instrument the test classes.
				-->
				<include name="**/*.class" />
				<exclude name="/net/admin4j/deps/**/*.class" />
			</fileset>
		</cobertura-instrument>
		
		<delete dir="${instrument-build.dir}/net/admin4j/deps"/>
	</target>
	
	<target name="compile-tests" depends="instrument-code" description="Compiles Admin4J under jdk 1.5">
		<mkdir dir="${test-build.dir}"/>
		<javac destdir="${test-build.dir}" 
				srcdir="${test-src.dir}" 
			    target="1.5"
			    source="1.5"
				fork="yes"  
				executable="${env.JDK5_HOME}/bin/javac"
				memoryMaximumSize="512m" 
				includeAntRuntime="no" 
				debug="on">
			<classpath>
				<pathelement path="${compile.classpath}"/>
				<dirset dir="${build.dir}"/>				
			</classpath>
			<include name="**/*.java" />
			<exclude name="**/*V1_6.java"/>
			<exclude name="**/Admin4JTestSuite.java"/>
		</javac>
		<javac destdir="${test-build.dir}" 
				srcdir="${test-src.dir}" 
			    target="1.6"
			    source="1.6"
				fork="yes"  
				executable="${env.JDK6_HOME}/bin/javac"
				memoryMaximumSize="512m" 
				includeAntRuntime="no" 
				debug="on">
			<classpath>
				<pathelement path="${compile.classpath}"/>
				<dirset dir="${build.dir}"/>				
			</classpath>
			<include name="**/*V1_6.java"/>
		</javac>
		
		<copy todir="${test-build.dir}">
			<fileset dir="${test-src.dir}">
				<include name="**/*"/>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	
	<target name="run-tests-jdk5" depends="compile-tests" description="Runs Tests under jdk 1.5">
		<junit haltonerror="true" 
			haltonfailure="true" 
			fork="yes" 
			forkmode="perTest" 
			filtertrace="off"
			printsummary="on"
			showoutput="yes"
			jvm="${env.JDK5_HOME}/bin/java">
			<classpath>
				<dirset dir="${test-build.dir}"/>
				<dirset dir="${instrument-build.dir}"/>
				<dirset dir="${build.dir}"/>
				<dirset dir="${ftl.dir}"/>
				<pathelement path="${compile.classpath}"/>
			</classpath>
			
			<formatter type="plain" usefile="false" /> <!-- to screen -->
			<formatter type="plain" /> <!-- to file -->
			
			<batchtest todir="${test-build.dir}">
			    <fileset dir="${test-build.dir}">
			      <include name="**/Test*.class"/>
			      <exclude name="**/*V1_6.class"/>
			      <exclude name="**/*ThreadProblem.class"/>
			      <exclude name="**/*TestTask.class"/>
			      <exclude name="**/TestEnvironmentConfiguration.class"/>
			      <exclude name="**/*40Base.class"/>
			    </fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="run-tests-jdk6" depends="compile-tests" description="Runs Tests under jdk 1.6">
		<junit haltonerror="true" 
			haltonfailure="true" 
			fork="yes" 
			forkmode="perTest" 
			filtertrace="off"
			printsummary="on"
			showoutput="yes"
			jvm="${env.JDK6_HOME}/bin/java">
			<classpath>
				<dirset dir="${test-build.dir}"/>
				<dirset dir="${instrument-build.dir}"/>
				<dirset dir="${build.dir}"/>
				<dirset dir="${ftl.dir}"/>
				<pathelement path="${compile.classpath}"/>
			</classpath>
			
			<formatter type="plain" usefile="false" /> <!-- to screen -->
	        <formatter type="plain" /> <!-- to file -->
			
			<batchtest todir="${test-build.dir}">
			    <fileset dir="${test-build.dir}">
			      <include name="**/Test*.class"/>
			      <exclude name="**/*V1_5.class"/>
			      <exclude name="**/*ThreadProblem.class"/>
			      <exclude name="**/*TestTask.class"/>
			      <exclude name="**/TestEnvironmentConfiguration.class"/>
			    </fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="run-tests-jdk7" depends="compile-tests" description="Runs Tests under jdk 1.7">
		<junit haltonerror="true" 
					haltonfailure="true" 
					fork="yes" 
					forkmode="perTest" 
					filtertrace="off"
					printsummary="on"
					showoutput="yes"
					jvm="${env.JDK7_HOME}/bin/java">
					<classpath>
						<dirset dir="${test-build.dir}"/>
						<dirset dir="${instrument-build.dir}"/>
						<dirset dir="${build.dir}"/>
						<dirset dir="${ftl.dir}"/>
						<pathelement path="${compile.classpath}"/>
					</classpath>
					<formatter type="plain" usefile="false" /> <!-- to screen -->
					<formatter type="plain" /> <!-- to file -->
					
					<batchtest todir="${test-build.dir}">
					    <fileset dir="${test-build.dir}">
					      <include name="**/Test*.class"/>
					      <exclude name="**/*V1_5.class"/>
					      <exclude name="**/*ThreadProblem.class"/>
					      <exclude name="**/*TestTask.class"/>
					      <exclude name="**/TestEnvironmentConfiguration.class"/>
					    </fileset>
					</batchtest>
				</junit>
	</target>
	
	<target name="run-tests-jdk8" depends="compile-tests" description="Runs Tests under jdk 1.8">
			<junit haltonerror="true" 
						haltonfailure="true" 
						fork="yes" 
						forkmode="perTest" 
						filtertrace="off"
						printsummary="on"
						showoutput="yes"
						jvm="${env.JDK8_HOME}/bin/java">
						<classpath>
							<dirset dir="${test-build.dir}"/>
							<dirset dir="${instrument-build.dir}"/>
							<dirset dir="${build.dir}"/>
							<dirset dir="${ftl.dir}"/>
							<pathelement path="${compile.classpath}"/>
						</classpath>
						<formatter type="plain" usefile="false" /> <!-- to screen -->
						<formatter type="plain" /> <!-- to file -->
						
						<batchtest todir="${test-build.dir}">
						    <fileset dir="${test-build.dir}">
						      <include name="**/Test*.class"/>
						      <exclude name="**/*V1_5.class"/>
						      <exclude name="**/*ThreadProblem.class"/>
						      <exclude name="**/*TestTask.class"/>
						      <exclude name="**/TestEnvironmentConfiguration.class"/>
						    </fileset>
						</batchtest>
					</junit>
		</target>
	
	<target name="compile-jdk5-jdbc" depends="init" description="Compiles Admin4J under jdk 1.5">
			<javac destdir="${build.dir}" 
					srcdir="${jdbc30.dir}" 
				    target="1.5"
				    source="1.5"
					fork="yes"  
					executable="${env.JDK5_HOME}/bin/javac"
					memoryMaximumSize="512m" 
					includeAntRuntime="no" 
					debug="on" 
					classpath="${compile.classpath}" >
				<include name="**/*.java" />
			</javac>
		</target>
	
	
	
	<target name="compile-jdk6" depends="init" description="Compiles Admin4J classes under jdk1.6">
		<javac destdir="${build.dir}" 
				srcdir="${src.dir}" 
			    target="1.6"
			    source="1.6"
				fork="yes"  
				executable="${env.JDK6_HOME}/bin/javac"
				memoryMaximumSize="512m" 
				includeAntRuntime="no" 
				debug="on" 
				classpath="${compile.classpath}" >
			<include name="**/*40.java" />
			<include name="**/*40Base.java" />
			<include name="**/*V1_6.java" />
		</javac>
	</target>
	
	<target name="compile-jdk6-jdbc" depends="init,compile-jdk6" description="Compiles Admin4J under jdk 1.6">
		<javac destdir="${build.dir}" 
				srcdir="${jdbc40.dir}" 
			    target="1.6"
			    source="1.6"
				fork="yes"  
				executable="${env.JDK6_HOME}/bin/javac"
				memoryMaximumSize="512m" 
				includeAntRuntime="no" 
				debug="on" 
				classpath="${compile.classpath}" >
			<include name="**/*.java" />
		</javac>
	</target>
	
	<target name="compile-jdk8-jdbc" depends="init,compile-jdk7" description="Compiles Admin4J under jdk 1.8">
		<javac destdir="${build.dir}" 
				srcdir="${jdbc42.dir}" 
			    target="1.8"
			    source="1.8"
				fork="yes"  
				executable="${env.JDK8_HOME}/bin/javac"
				memoryMaximumSize="512m" 
				includeAntRuntime="no" 
				debug="on" 
				classpath="${compile.classpath}" >
			<include name="**/*.java" />
		</javac>
	</target>
	
	<target name="compile-jdk7" depends="init,compile-jdk6" description="Compiles Admin4J classes under jdk1.7">
		<javac destdir="${build.dir}" 
				srcdir="${src.dir}" 
			    target="1.7"
			    source="1.7"
				fork="yes"  
				executable="${env.JDK7_HOME}/bin/javac"
				memoryMaximumSize="512m" 
				includeAntRuntime="no" 
				debug="on" 
				classpath="${compile.classpath}" >
			<include name="**/*41.java" />
			<include name="**/*V1_7.java" />
			<include name="**/*Jdk7.java" />
		</javac>
	</target>
	

	<target name="dist" depends="build-admin4j-commons,compile-jdk5,compile-jdk5-jdbc,compile-jdk6-jdbc,compile-jdk6,compile-jdk7,compile-jdk8-jdbc,run-tests-jdk5,run-tests-jdk6,run-tests-jdk7,run-tests-jdk8,instrument-code" description="produces the jar for Admin4J">
		<mkdir dir="${dist.expanded.dir}"/>
		<jar destfile="${dist.expanded.dir}/${project.name}-${version}.jar" >
			<fileset dir="${build.dir}" includes="**/*.class"/>
			<fileset dir="${ftl.dir}"/>
		</jar>
		<jar destfile="${dist.expanded.dir}/${project.name}-${version}-src.jar" >
			<fileset dir="${src.dir}" includes="**/*.java"/>
			<fileset dir="${jdbc30.dir}" includes="**/*.java"/>
			<fileset dir="${jdbc40.dir}" includes="**/*.java"/>
			<fileset dir="${jdbc42.dir}" includes="**/*.java"/>
			<fileset dir="${temp.src.dir}" includes="**/*.java"/>
		</jar>
		
		<mkdir dir="${dist.expanded.dir}/lib"/>
		<copy todir="${dist.expanded.dir}/lib">
			<fileset dir="${runtime.lib.dir}" />
		</copy>
		
		<copy file="${base.dir}/LICENSE.txt" todir="${dist.expanded.dir}" />
		<copy file="${base.dir}/NOTICE.txt" todir="${dist.expanded.dir}" />
		<copy file="${base.dir}/ReadMe-Admin4j-ReleaseNotes.txt" todir="${dist.expanded.dir}" />
		
		<mkdir dir="${dist.expanded.dir}/docs"/>
		<copy todir="${dist.expanded.dir}/docs">
			<fileset dir="${env.WEBSITE_HOME}" />
		</copy>
		
		<mkdir dir="${dist.expanded.dir}/docs/doc/pmd"/>
		<pmd rulesetfiles="rulesets/java/basic.xml">
			<formatter type="html" toFile="${dist.expanded.dir}/docs/doc/pmd/pmd_report.html" toConsole="true"/>
			<fileset dir="${src.dir}" includes="**/*.java"/>
			<fileset dir="${jdbc30.dir}" includes="**/*.java"/>
			<fileset dir="${jdbc40.dir}" includes="**/*.java"/>
			<fileset dir="${jdbc42.dir}" includes="**/*.java"/>
		</pmd>
		
		<mkdir dir="${dist.expanded.dir}/docs/doc/checkstyle"/>
		<checkstyle config="${build.lib.dir}/checkstyle/sun_checks.xml" failOnViolation="false">
			<formatter type="xml" tofile="${dist.expanded.dir}/docs/doc/checkstyle/checkstyle_report.xml"/>
			<fileset dir="${src.dir}" includes="**/*.java"/>
			<fileset dir="${jdbc30.dir}" includes="**/*.java"/>
			<fileset dir="${jdbc40.dir}" includes="**/*.java"/>
			<fileset dir="${jdbc42.dir}" includes="**/*.java"/>
		</checkstyle>
		<!--  Maybe I'll figure out the 'Content is not allowed in prolog' error someday
		<xslt in="${dist.expanded.dir}/docs/doc/checkstyle/checkstyle_report.xml"
			destdir="${dist.expanded.dir}/docs/doc/checkstyle" 
			basedir="${build.lib.dir}/checkstyle"
			classpathref="compile.classpath.ref"
			style="${build.lib.dir}/checkstyle/checkstyle-simple.xsl"/>
			-->
		
		<javadoc packagenames="net.admin4j.*"
				   excludepackagenames="net.admin4j.deps.commons.*"
	               sourcepath="${src.dir}:${jdbc30.dir}:${jdbc40.dir}"
	               classpath="${compile.classpath}"
	               destdir="${javadoc.dir}"
	               author="true"
	               version="true"
	               use="true"
	               windowtitle="Admin4J API">
	               <doctitle>"<![CDATA[<h1>Admin4J ${version}</h1>]]>"</doctitle>    
	               <bottom><![CDATA[<i>Copyright &#169; 2012 The Admin4J Project. All Rights Reserved.</i>]]></bottom>
	    </javadoc>
		<jar destfile="${dist.expanded.dir}/${project.name}-${version}-javadoc.jar" >
			<fileset dir="${javadoc.dir}" />
		</jar>
		<mkdir dir="${dist.expanded.dir}/docs/doc/javadoc"/>
		<copy todir="${dist.expanded.dir}/docs/doc/javadoc">
			<fileset dir="${javadoc.dir}" />
		</copy>
		<delete dir="${javadoc.dir}"/>
		
		<mkdir dir="${dist.expanded.dir}/docs/doc/coverage"/>
		<cobertura-report destdir="${dist.expanded.dir}/docs/doc/coverage">
			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
			</fileset>
		</cobertura-report>
		
		<delete file="cobertura.ser"/>
		<delete dir="${test-build.dir}"/>
		<delete dir="${instrument-build.dir}"/>
		
	</target>
	
	<target name="testAppWar" depends="dist" description="produces the war for the Admin4J test app">
		<mkdir dir="${dist.expanded.dir}/${sample.name}"/>
		<mkdir dir="${dist.expanded.dir}/${sample.name}/WEB-INF/lib"/>
		<copy todir="${dist.expanded.dir}/${sample.name}">
			<fileset dir="${webroot.dir}"/>
		</copy>
		<copy todir="${dist.expanded.dir}/${sample.name}/WEB-INF/lib">
			<fileset file="${dist.expanded.dir}/${project.name}-${version}.jar"/>
			<fileset dir="${runtime.lib.dir}" />
		</copy>
		<war warfile="${dist.expanded.dir}/${sample.name}.war"
		    webxml="${webroot.dir}/WEB-INF/web.xml">
			<fileset dir="${dist.expanded.dir}/${sample.name}"/>
			<exclude name="**/_*.class"/>
		</war>
		
		<delete dir="${dist.expanded.dir}/${sample.name}"/>
	</target>
	
	<target name="zip" depends="testAppWar" description="produces the zip file to release">
		<copy todir="${dist.expanded.dir}/docs">
			<fileset dir="${site.dir}" />
		</copy>
		<zip destfile="${dist.dir}/${project.name}-${version}.zip" basedir="${dist.dir}" />
	</target>
	
	<target name="deployLocal" depends="testAppWar" description="Deploys to the local Tomcat environment">
		<delete dir="${tomcat.dir}/webapps/${sample.name}"/>
		<copy file="${dist.expanded.dir}/${sample.name}.war" todir="${tomcat.dir}/webapps" />
		<delete>
		    <fileset dir="${tomcat.dir}/lib" includes="${project.name}-*.jar"/>
		  </delete>
		<copy file="${dist.expanded.dir}/${project.name}-${version}.jar" todir="${tomcat.dir}/lib" />
	</target>
	
	<target name="deployFtlOnly" description="Deploys FTL to the local Tomcat environment">
		<mkdir dir="${tomcat.dir}/webapps/${sample.name}/WEB-INF/classes"/>
		<copy todir="${tomcat.dir}/webapps/${sample.name}/WEB-INF/classes">
			<fileset dir="${ftl.dir}">
				<include name="**/*.ftl"/>
			</fileset>
		</copy>
	</target>
	
</project>
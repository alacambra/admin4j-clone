<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">
<document>
  <header>
    <title>Welcome to Admin4J</title>
    <meta name="keywords">Admin4J, Derek Ashmore, Mike Lyons, Java, Java EE,thread contention, memory management, exception management, error tracking</meta>
    <meta name="description">Admin4J is a set of Java EE application administration utilities including detection for thread contention and memory issues.</meta>
  </header>
  <body>
    <section id="status">
      <title>Introduction</title>
      <p>Admin4J is a set of administration utilities for Java EE applications.</p>
      <p>Admin4J is open source and uses an Apache 2.0 License.</p>
      <p>Admin4J will do the following:</p>
      <ul>
	<li>Track and summarize exceptions generated by applications so the most severe issues are more easily identified.</li>
	<li>Detect thread contention problems at runtime.  Problems are logged and administrators optionally notified.</li>
	<li>Detect memory issues at runtime.  Problems are logged and administrators optionally notified.</li>
	<li>Track and display performance metrics</li>
	<li>Provides a SQL Performance Measurement page.</li>
	<li>Identify the most frequently executed code ("Hot Spots") in web applications</li>
	<li>Provides a Log Level administration page to change log levels at runtime.  Currently supports log4j and jdk logging.</li>
	<li>Provides a Web-Based File Explorer administration page with optional security features to limit display and change capabilities.</li>
	<li>Provides a Java EE Filter to automatically detect application errors.  Problems are logged and administrators optionally notified.</li>
	<li>Provides a web-based JMX browser for environments that don't expose JMX ports for remote browsing.</li>
      </ul>
    </section>
    
    <section id="screenshots">
      <title>Screen Shots</title>
      <p><strong>Hot Spot</strong></p>
      <figure src="doc/hotspot-halfsize.JPG" alt="Admin4J Hot Spot Screen shot" id="hotspot-screen-shot" width="960" height="527"/>
      <p><strong>Exception Summary</strong></p>
      <figure src="doc/exception-summary-75Pctsize.JPG" alt="Admin4J Exception Summary Screen shot" id="exception-summary-shot" width="960" height="527"/>
      <p><strong>Log Level Management</strong></p>
      <figure src="doc/log-management-fullsize.JPG" alt="Admin4J Log Management Screen shot" id="log-mgmt-shot" width="960" height="527"/>
      <p><strong>Performance Statistics</strong></p>
      <figure src="doc/performance-stats-fullsize.JPG" alt="Admin4J Performance Statistics shot" id="performance-statistics-shot" width="960" height="527"/>
      <p><strong>SQL Performance Statistics</strong></p>
      <figure src="doc/sql-display-75Pctsize.JPG" alt="Admin4J SQL Performance Statistics shot" id="sql-performance-statistics-shot" width="960" height="527"/>
    </section>
      
    <section id="background">
      <title>Background</title>
      <p>The premise for Admin4J is that application administrators and support developers are automatically 'actors' for Java EE applications that have support needs and requirements that are similar for all Java EE applications.  These use cases are as follows:</p>
      <ul>
      <li>Administrators need assistance summarizing exceptions occurring in production.  A typical custom-developed Java EE application with moderate to high usage may report hundreds or even thoushands of exceptions.  Many occurances of these exceptions may arise from the same problem, however the volume generated by many applications makes it difficult and time-consuming to understand and prioritize work on the root problems at hand.</li>
      <li>Adminsitrators need to be notified if thread contention beyond a specified threadshold occurs in production.  Thread contention will often make Java EE applications appear "slow" and will lead to a negative view of the application by end-users.</li>
      <li>Administrators need to be notified if memory issues (e.g. Memory usage occurs beyond a specified threshhold) are experienced in production.  With advanced warning of such issues, adminsitrators can take planned corrective action before end-users experience resulting errors from memory issues.</li>
      <li>Administrators sometimes need to be able to manipulate log levels at runtime to investigate issues.  Both log4j and jdk logging rely on configuration files and require a container recycle to implement changes.  This isn't practical in production environments.</li>
      <li>Administrators need a record of errors experienced by end-users in production.  The need to detect and log application errors resulting from web application usage is universal.</li>
      <li>Administrators need information natively provided via JMX.  Many environments don't expose JMX ports for containers.</li>
      <li>Adminsitrators need to view application configuration files.  In addition, some applications require the manipulation of file resources (e.g. report templates)</li>
      <li>Administrators need information regarding application performance.  This often happens in response to end-user complaints.</li>
      <li>Incorporating administration capabilities in Java EE applications needs to be easy and unintrusive.</li>
      </ul>
    </section>
    
  </body>
</document>
